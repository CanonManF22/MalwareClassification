import os
import errno
import time
import numpy as np
import matplotlib.pyplot as plot
'''
Data perparation for HMM, ANN, SVM, and clustering. Dissassembles DLL and Executable files using objdump
and writes sequence of assemble instructions to file.
'''
def cleanAssembly(cleaned_filename, family, command, instruction_dictionary):
    opcode_probabilities = dict()
    #directory to write file to
    write = './resources/' + family + '_cleaned_fortesting' + '/' + family + '_' + cleaned_filename
    # create a new folder for malware family if it doesnt exist
    if not os.path.exists(os.path.dirname(write)):
        try:
            os.makedirs(os.path.dirname(write))
        except OSError as exc:  # Guard against race condition
            if exc.errno != errno.EEXIST:
                raise

    with os.popen(command) as dissasembled:
        with open(write, 'w') as output:
            print(family, cleaned_filename, family)
            for line in dissasembled:
                for instruction in instruction_dictionary.keys():
                    instruction_lowercase = instruction.lower()
                    if instruction_lowercase in line:
                        output.write(str(instruction_dictionary[instruction]))
                        output.write('\n')
        output.close()
        dissasembled.close()                   
                

def batchDissassemble(read_directory ,files, instruction_dictionary, family):
    for filename in files:
        command = 'objdump -d ' + read_directory + filename
        cleaned_filename = 'opcode_' + filename + '.txt'
        cleanAssembly(cleaned_filename, family, command, instruction_dictionary)


